name: CMake CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install specific CMake versions:
      # - Linux/Windows: 3.16.x (to ensure we test against your lowest supported)
      # - macOS: latest (>=3.5, and compatible with AppleClang 17)
      - name: Setup CMake 3.16 (Linux/Windows)
        if: runner.os != 'macOS'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.16.x'

      - name: Setup CMake (macOS latest)
        if: runner.os == 'macOS'
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: 'latest'

      - name: Show CMake version
        run: cmake --version

      # Linux build deps for OpenGL + X11 (needed by GLFW)
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y xorg-dev libgl1-mesa-dev

      # Configure (single-config generators: Linux/macOS)
      # Pass -DCMAKE_POLICY_VERSION_MINIMUM=3.5 to allow dependencies that call
      # cmake_minimum_required(< 3.5) to configure under new CMake.
      - name: Configure CMake (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DGLFW_BUILD_EXAMPLES=OFF \
            -DGLFW_BUILD_TESTS=OFF \
            -DGLFW_BUILD_DOCS=OFF \
            -DGLFW_INSTALL=OFF

      # Configure (multi-config generator: Windows/MSVC)
      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B build -A x64 \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DGLFW_BUILD_EXAMPLES=OFF \
            -DGLFW_BUILD_TESTS=OFF \
            -DGLFW_BUILD_DOCS=OFF \
            -DGLFW_INSTALL=OFF

      # Build
      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: cmake --build build --config ${{ matrix.build_type }} --parallel
